{"C:\\Users\\jackp\\Desktop\\CPSC310\\project_team134\\src\\controller\\IInsightFacade.ts":{"path":"C:\\Users\\jackp\\Desktop\\CPSC310\\project_team134\\src\\controller\\IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":46}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":11,"6":11,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":11,"2":0,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/jackp/Desktop/CPSC310/project_team134/src/controller/IInsightFacade.ts","sources":["C:/Users/jackp/Desktop/CPSC310/project_team134/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,yCAAmB,CAAA;IACnB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAQD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,GAAG,IAAW;QACzB,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\r\n * This is the primary high-level API for the project. In this folder there should be:\r\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\r\n * You should not change this interface at all or the test suite will not work.\r\n */\r\n\r\nexport enum InsightDatasetKind {\r\n\tCourses = \"courses\",\r\n\tRooms = \"rooms\",\r\n}\r\n\r\nexport interface InsightDataset {\r\n\tid: string;\r\n\tkind: InsightDatasetKind;\r\n\tnumRows: number;\r\n}\r\n\r\nexport class InsightError extends Error {\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper(...args);\r\n\t\tError.captureStackTrace(this, InsightError);\r\n\t}\r\n}\r\n\r\nexport class NotFoundError extends Error {\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper(...args);\r\n\t\tError.captureStackTrace(this, NotFoundError);\r\n\t}\r\n}\r\n\r\nexport class ResultTooLargeError extends Error {\r\n\tconstructor(...args: any[]) {\r\n\t\tsuper(...args);\r\n\t\tError.captureStackTrace(this, ResultTooLargeError);\r\n\t}\r\n}\r\n\r\nexport interface IInsightFacade {\r\n\t/**\r\n\t * Add a dataset to insightUBC.\r\n\t *\r\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\r\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\r\n\t * @param kind  The kind of the dataset\r\n\t *\r\n\t * @return Promise <string[]>\r\n\t *\r\n\t * The promise should fulfill on a successful add, reject for any failures.\r\n\t * The promise should fulfill with a string array,\r\n\t * containing the ids of all currently added datasets upon a successful add.\r\n\t * The promise should reject with an InsightError describing the error.\r\n\t *\r\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\r\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\r\n\t *\r\n\t * After receiving the dataset, it should be processed into a data structure of\r\n\t * your design. The processed data structure should be persisted to disk; your\r\n\t * system should be able to load this persisted value into memory for answering\r\n\t * queries.\r\n\t *\r\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\r\n\t * be successfully answered.\r\n\t */\r\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\r\n\r\n\t/**\r\n\t * Remove a dataset from insightUBC.\r\n\t *\r\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\r\n\t *\r\n\t * @return Promise <string>\r\n\t *\r\n\t * The promise should fulfill upon a successful removal, reject on any error.\r\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\r\n\t *\r\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\r\n\t *\r\n\t * The promise should fulfill the id of the dataset that was removed.\r\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\r\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\r\n\t *\r\n\t * This will delete both disk and memory caches for the dataset for the id meaning\r\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\r\n\t */\r\n\tremoveDataset(id: string): Promise<string>;\r\n\r\n\t/**\r\n\t * Perform a query on insightUBC.\r\n\t *\r\n\t * @param query  The query to be performed.\r\n\t *\r\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\r\n\t * or references multiple datasets, it should be rejected.\r\n\t *\r\n\t * @return Promise <any[]>\r\n\t *\r\n\t * The promise should fulfill with an array of results.\r\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\r\n\t * or an InsightError (for any other source of failure) describing the error.\r\n\t */\r\n\tperformQuery(query: any): Promise<any[]>;\r\n\r\n\t/**\r\n\t * List all currently added datasets, their types, and number of rows.\r\n\t *\r\n\t * @return Promise <InsightDataset[]>\r\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\r\n\t */\r\n\tlistDatasets(): Promise<InsightDataset[]>;\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4af91976ebc22ee2d92431ce8a24c0b173899fc3","contentHash":"1deb1652f41bef7fe73653db51010816ad33675435a3136f926e27c8dc78298d"},"C:\\Users\\jackp\\Desktop\\CPSC310\\project_team134\\src\\controller\\InsightFacade.ts":{"path":"C:\\Users\\jackp\\Desktop\\CPSC310\\project_team134\\src\\controller\\InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":141}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"18":{"start":{"line":17,"column":109},"end":{"line":17,"column":141}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":62}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":62}},"24":{"start":{"line":25,"column":25},"end":{"line":25,"column":52}},"25":{"start":{"line":26,"column":16},"end":{"line":26,"column":49}},"26":{"start":{"line":27,"column":11},"end":{"line":27,"column":44}},"27":{"start":{"line":30,"column":8},"end":{"line":30,"column":21}},"28":{"start":{"line":31,"column":8},"end":{"line":31,"column":25}},"29":{"start":{"line":32,"column":8},"end":{"line":32,"column":25}},"30":{"start":{"line":35,"column":8},"end":{"line":35,"column":26}},"31":{"start":{"line":40,"column":8},"end":{"line":40,"column":27}},"32":{"start":{"line":41,"column":8},"end":{"line":41,"column":29}},"33":{"start":{"line":44,"column":20},"end":{"line":44,"column":41}},"34":{"start":{"line":47,"column":8},"end":{"line":52,"column":9}},"35":{"start":{"line":48,"column":12},"end":{"line":48,"column":67}},"36":{"start":{"line":51,"column":12},"end":{"line":51,"column":95}},"37":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"38":{"start":{"line":54,"column":12},"end":{"line":54,"column":97}},"39":{"start":{"line":56,"column":23},"end":{"line":56,"column":25}},"40":{"start":{"line":57,"column":8},"end":{"line":73,"column":9}},"41":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"42":{"start":{"line":59,"column":16},"end":{"line":59,"column":25}},"43":{"start":{"line":61,"column":26},"end":{"line":61,"column":50}},"44":{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},"45":{"start":{"line":63,"column":16},"end":{"line":63,"column":25}},"46":{"start":{"line":65,"column":27},"end":{"line":65,"column":68}},"47":{"start":{"line":66,"column":12},"end":{"line":71,"column":13}},"48":{"start":{"line":67,"column":16},"end":{"line":67,"column":50}},"49":{"start":{"line":70,"column":16},"end":{"line":70,"column":25}},"50":{"start":{"line":72,"column":12},"end":{"line":72,"column":89}},"51":{"start":{"line":74,"column":8},"end":{"line":74,"column":43}},"52":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"53":{"start":{"line":78,"column":12},"end":{"line":78,"column":19}},"54":{"start":{"line":80,"column":8},"end":{"line":87,"column":9}},"55":{"start":{"line":81,"column":12},"end":{"line":86,"column":13}},"56":{"start":{"line":82,"column":16},"end":{"line":82,"column":39}},"57":{"start":{"line":85,"column":16},"end":{"line":85,"column":50}},"58":{"start":{"line":88,"column":19},"end":{"line":88,"column":45}},"59":{"start":{"line":89,"column":8},"end":{"line":89,"column":59}},"60":{"start":{"line":90,"column":8},"end":{"line":90,"column":89}},"61":{"start":{"line":93,"column":27},"end":{"line":94,"column":39}},"62":{"start":{"line":95,"column":8},"end":{"line":95,"column":73}},"63":{"start":{"line":95,"column":41},"end":{"line":95,"column":71}},"64":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"65":{"start":{"line":99,"column":12},"end":{"line":99,"column":112}},"66":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"67":{"start":{"line":102,"column":12},"end":{"line":102,"column":110}},"68":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"69":{"start":{"line":105,"column":12},"end":{"line":105,"column":106}},"70":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"71":{"start":{"line":108,"column":12},"end":{"line":108,"column":110}},"72":{"start":{"line":110,"column":25},"end":{"line":110,"column":46}},"73":{"start":{"line":111,"column":8},"end":{"line":111,"column":52}},"74":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"75":{"start":{"line":113,"column":12},"end":{"line":113,"column":108}},"76":{"start":{"line":115,"column":8},"end":{"line":115,"column":39}},"77":{"start":{"line":116,"column":8},"end":{"line":116,"column":44}},"78":{"start":{"line":117,"column":8},"end":{"line":117,"column":48}},"79":{"start":{"line":120,"column":8},"end":{"line":120,"column":46}},"80":{"start":{"line":123,"column":8},"end":{"line":123,"column":35}},"81":{"start":{"line":126,"column":29},"end":{"line":126,"column":38}},"82":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"83":{"start":{"line":128,"column":12},"end":{"line":128,"column":84}},"84":{"start":{"line":130,"column":8},"end":{"line":141,"column":9}},"85":{"start":{"line":131,"column":23},"end":{"line":131,"column":38}},"86":{"start":{"line":132,"column":12},"end":{"line":137,"column":13}},"87":{"start":{"line":133,"column":16},"end":{"line":133,"column":58}},"88":{"start":{"line":136,"column":16},"end":{"line":136,"column":104}},"89":{"start":{"line":140,"column":12},"end":{"line":140,"column":97}},"90":{"start":{"line":142,"column":8},"end":{"line":147,"column":11}},"91":{"start":{"line":143,"column":12},"end":{"line":146,"column":13}},"92":{"start":{"line":144,"column":16},"end":{"line":144,"column":47}},"93":{"start":{"line":145,"column":16},"end":{"line":145,"column":49}},"94":{"start":{"line":148,"column":8},"end":{"line":148,"column":35}},"95":{"start":{"line":151,"column":0},"end":{"line":151,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":71},"end":{"line":23,"column":1}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":26},"end":{"line":33,"column":5}},"line":29},"8":{"name":"(anonymous_8)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":16},"end":{"line":36,"column":5}},"line":34},"9":{"name":"(anonymous_9)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":18},"end":{"line":42,"column":5}},"line":39},"10":{"name":"(anonymous_10)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":43},"end":{"line":75,"column":5}},"line":43},"11":{"name":"(anonymous_11)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":67},"end":{"line":91,"column":5}},"line":76},"12":{"name":"(anonymous_12)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":25},"end":{"line":96,"column":5}},"line":92},"13":{"name":"(anonymous_13)","decl":{"start":{"line":95,"column":32},"end":{"line":95,"column":33}},"loc":{"start":{"line":95,"column":41},"end":{"line":95,"column":71}},"line":95},"14":{"name":"(anonymous_14)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":40},"end":{"line":118,"column":5}},"line":97},"15":{"name":"(anonymous_15)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":19},"end":{"line":121,"column":5}},"line":119},"16":{"name":"(anonymous_16)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":24},"end":{"line":124,"column":5}},"line":122},"17":{"name":"(anonymous_17)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":28},"end":{"line":149,"column":5}},"line":125},"18":{"name":"(anonymous_18)","decl":{"start":{"line":142,"column":30},"end":{"line":142,"column":31}},"loc":{"start":{"line":142,"column":50},"end":{"line":147,"column":9}},"line":142}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":141}},{"start":{"line":17,"column":4},"end":{"line":17,"column":141}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":141}},{"start":{"line":17,"column":40},"end":{"line":17,"column":141}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":107}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":107}}],"line":17},"12":{"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":51}},{"start":{"line":21,"column":56},"end":{"line":23,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":61}},"type":"cond-expr","locations":[{"start":{"line":22,"column":37},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":61}}],"line":22},"14":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":33}}],"line":22},"15":{"loc":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},{"start":{"line":53,"column":8},"end":{"line":55,"column":9}}],"line":53},"16":{"loc":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},{"start":{"line":58,"column":12},"end":{"line":60,"column":13}}],"line":58},"17":{"loc":{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":64,"column":13}},{"start":{"line":62,"column":12},"end":{"line":64,"column":13}}],"line":62},"18":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"19":{"loc":{"start":{"line":77,"column":12},"end":{"line":77,"column":91}},"type":"binary-expr","locations":[{"start":{"line":77,"column":12},"end":{"line":77,"column":57}},{"start":{"line":77,"column":61},"end":{"line":77,"column":91}}],"line":77},"20":{"loc":{"start":{"line":81,"column":12},"end":{"line":86,"column":13}},"type":"if","locations":[{"start":{"line":81,"column":12},"end":{"line":86,"column":13}},{"start":{"line":81,"column":12},"end":{"line":86,"column":13}}],"line":81},"21":{"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},{"start":{"line":98,"column":8},"end":{"line":100,"column":9}}],"line":98},"22":{"loc":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},{"start":{"line":101,"column":8},"end":{"line":103,"column":9}}],"line":101},"23":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"24":{"loc":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},{"start":{"line":107,"column":8},"end":{"line":109,"column":9}}],"line":107},"25":{"loc":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},{"start":{"line":112,"column":8},"end":{"line":114,"column":9}}],"line":112},"26":{"loc":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},{"start":{"line":127,"column":8},"end":{"line":129,"column":9}}],"line":127},"27":{"loc":{"start":{"line":127,"column":12},"end":{"line":127,"column":55}},"type":"binary-expr","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":35}},{"start":{"line":127,"column":39},"end":{"line":127,"column":55}}],"line":127},"28":{"loc":{"start":{"line":130,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":141,"column":9}},{"start":{"line":130,"column":8},"end":{"line":141,"column":9}}],"line":130},"29":{"loc":{"start":{"line":143,"column":12},"end":{"line":146,"column":13}},"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":146,"column":13}},{"start":{"line":143,"column":12},"end":{"line":146,"column":13}}],"line":143}},"s":{"0":1,"1":144,"2":144,"3":144,"4":35892,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":144,"18":144,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":12,"28":12,"29":12,"30":323107,"31":15,"32":15,"33":12,"34":12,"35":12,"36":0,"37":12,"38":3,"39":9,"40":9,"41":29765,"42":12,"43":29753,"44":29753,"45":23,"46":29730,"47":29730,"48":29730,"49":9,"50":29721,"51":9,"52":29721,"53":11775,"54":17946,"55":323107,"56":323107,"57":0,"58":17946,"59":17946,"60":17946,"61":323107,"62":323107,"63":3231070,"64":17,"65":1,"66":16,"67":2,"68":14,"69":1,"70":13,"71":1,"72":12,"73":12,"74":9,"75":3,"76":6,"77":6,"78":6,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1},"f":{"0":144,"1":35892,"2":0,"3":1,"4":0,"5":1,"6":1,"7":12,"8":323107,"9":15,"10":12,"11":29721,"12":323107,"13":3231070,"14":17,"15":0,"16":0,"17":0,"18":0},"b":{"0":[1,1,1],"1":[1,0],"2":[144,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[144,0],"11":[144,144],"12":[1,1,1],"13":[0,1],"14":[1,1],"15":[3,9],"16":[12,29753],"17":[23,29730],"18":[11775,17946],"19":[29721,29721],"20":[323107,0],"21":[1,16],"22":[2,14],"23":[1,13],"24":[1,12],"25":[3,6],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/jackp/Desktop/CPSC310/project_team134/src/controller/InsightFacade.ts","sources":["C:/Users/jackp/Desktop/CPSC310/project_team134/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {IInsightFacade, InsightDataset, InsightDatasetKind, InsightError, NotFoundError} from \"./IInsightFacade\";\r\nimport JSZip from \"jszip\";\r\nimport * as fs from \"fs-extra\";\r\nimport {readdir} from \"fs-extra\";\r\n\r\n// Not using this but keeping it commented out for now in case we want to use it in the future\r\n// interface JSONCourse {\r\n// \ttier_eight_five: number;\r\n// \ttier_ninety: number;\r\n// \tTitle: string;\r\n// \tSection: string;\r\n// \tDetail: string;\r\n// \ttier_seventy_two: number;\r\n// \tOther: number;\r\n// \tLow: number;\r\n// \ttier_sixty_four: number;\r\n// \ttier_zero: number;\r\n// \ttier_seventy_six: number;\r\n// \ttier_thirty: number;\r\n// \ttier_fifty: number;\r\n// \tProfessor: string;\r\n// \tAudit: number;\r\n// \ttier_g_fifty: number;\r\n// \ttier_forty: number;\r\n// \tWithdrew: number;\r\n// \tYear: string;\r\n// \ttier_twenty: number;\r\n// \tStddev: number;\r\n// \tEnrolled: number;\r\n// \ttier_fifty_five: number;\r\n// \ttier_eighty: number;\r\n// \ttier_sixty: number;\r\n// \ttier_ten: number;\r\n// \tHigh: number;\r\n// \tCourse: string;\r\n// \tSession: string;\r\n// \tPass: number;\r\n// \tFail: number;\r\n// \tAvg: number;\r\n// \tCampus: string;\r\n// \tSubject: string;\r\n// }\r\n\r\nclass Dataset implements InsightDataset {\r\n\tpublic id: string;\r\n\tpublic kind: InsightDatasetKind;\r\n\tpublic numRows: number;\r\n\r\n\tconstructor(id: string, kind: InsightDatasetKind) {\r\n\t\tthis.id = id;\r\n\t\tthis.numRows = 0;\r\n\t\tthis.kind = kind;\r\n\t}\r\n\r\n\t// In this class we can add different methods to search for a course from disk\r\n\t// We will handle the logic of parsing the query in InsightFacade\r\n\t// Then call the appropriate getter that's here in Dataset\r\n\r\n\tpublic addCourse(): void {\r\n\t\tthis.numRows += 1;\r\n\t}\r\n}\r\n\r\nexport default class InsightFacade implements IInsightFacade {\r\n\tprivate datasets: InsightDataset[];\r\n\tprivate datasetIds: string[];\r\n\r\n\tconstructor() {\r\n\t\tthis.datasets = [];\r\n\t\tthis.datasetIds = [];\r\n\t}\r\n\r\n\r\n\tprivate async loadDataset (datasetObj: Dataset, content: string) {\r\n\t\tlet jsZip = new JSZip();\r\n\t\tlet jsonObject;\r\n\t\tlet zip;\r\n\t\ttry {\r\n\t\t\tzip = await jsZip.loadAsync(content, {base64: true});\r\n\t\t} catch(error) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Not a proper ZIP file!\"));\r\n\t\t}\r\n\t\t// jsZip.folder() returns an array, so if its length is 0 then there is no folder named courses\r\n\t\tif (jsZip.folder(/courses/).length !== 1) {\r\n\t\t\treturn Promise.reject(new InsightError(\"No folder named courses!\"));\r\n\t\t}\r\n\r\n\t\t// iterate over all the files in the zip folder\r\n\t\tlet promises = [];\r\n\t\tfor (let filename of Object.keys(zip.files)) {\r\n\t\t\t// first file will be a folder, we can ignore this\r\n\t\t\tif (zip.files[filename].dir) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// check if the file is in the courses folder\r\n\t\t\tconst regex = new RegExp(\"courses/.*\");\r\n\t\t\tif (!(regex.test(zip.files[filename].name))) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// get file data and parse it so it will be a JSON object\r\n\t\t\tlet fileData = await zip.files[filename].async(\"string\");\r\n\t\t\ttry {\r\n\t\t\t\tjsonObject = JSON.parse(fileData);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// add json object to dataset\r\n\t\t\tpromises.push(this.addJSONObjectToDataset(jsonObject, datasetObj, filename));\r\n\t\t}\r\n\t\treturn await Promise.all(promises);\r\n\t}\r\n\r\n\tprivate async addJSONObjectToDataset(jsonObject: any, datasetObj: Dataset, filename: string): Promise<void> {\r\n\t\t// ignore empty results\r\n\t\tif (!(Object.keys(jsonObject).includes(\"result\")) || jsonObject.result.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// add all the sections one by one to the datasetObj\r\n\t\tfor (let section of jsonObject.result) {\r\n\t\t\tif (this.validateSection(section)) {\r\n\t\t\t\tdatasetObj.addCourse();\r\n\t\t\t} else {\r\n\t\t\t\tdelete jsonObject.result[section];\r\n\t\t\t}\r\n\t\t}\r\n\t\t// write the course to ./data/ folder\r\n\t\tlet path = `./data/${datasetObj.id}/`;\r\n\t\tawait fs.promises.mkdir(path, {recursive: true});\r\n\t\t// code adapted from https://stackoverflow.com/questions/573145/get-everything-after-the-dash-in-a-string-in-javascript/35236900\r\n\t\treturn await fs.writeJSON(`${path}${filename.split(\"/\")[1]}`, jsonObject.result);\r\n\t}\r\n\r\n\tprivate validateSection(val: any): boolean {\r\n\t\t// code adapted from https://stackoverflow.com/questions/54881865/check-if-multiple-keys-exists-in-json-object\r\n\t\t// Ensures that the section has all parameters that we will need\r\n\t\tconst neededKeys = [\"Subject\", \"Course\", \"Avg\", \"Professor\", \"Title\", \"Pass\", \"Fail\",\r\n\t\t\t\"Audit\", \"Section\", \"Year\"];\r\n\t\treturn neededKeys.every((key) => Object.keys(val).includes(key));\r\n\t}\r\n\r\n\r\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\r\n\t\t// Check if id is invalid: contains underscores or only whitespace, or is already in dataset\r\n\t\tif (id.includes(\"_\")) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Invalid ID: Contains an underscore (_).\"));\r\n\t\t}\r\n\t\tif (id.trim() === \"\") {\r\n\t\t\treturn Promise.reject(new InsightError(\"Invalid ID: Contains only whitespace.\"));\r\n\t\t}\r\n\t\tif (this.datasetIds.includes(id)) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Dataset already contains this ID.\"));\r\n\t\t}\r\n\t\tif (kind !== InsightDatasetKind.Courses) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Invalid kind! We only accept courses.\"));\r\n\t\t}\r\n\t\tlet datasetObj = new Dataset(id, kind);\r\n\r\n\t\tawait this.loadDataset(datasetObj, content);\r\n\t\tif (datasetObj.numRows === 0) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Dataset contains no valid sections!\"));\r\n\t\t}\r\n\t\tthis.datasets.push(datasetObj as InsightDataset);\r\n\t\tthis.datasetIds.push(datasetObj.id);\r\n\t\treturn Promise.resolve(this.datasetIds);\r\n\t}\r\n\r\n\tpublic listDatasets(): Promise<InsightDataset[]> {\r\n\t\treturn Promise.resolve(this.datasets);\r\n\t}\r\n\r\n\tpublic performQuery(query: any): Promise<any[]> {\r\n\t\t// TODO: implement performQuery\r\n\t\treturn Promise.resolve([]);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove a dataset from insightUBC.\r\n\t *\r\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\r\n\t *\r\n\t * @return Promise <string>\r\n\t *\r\n\t * The promise should fulfill upon a successful removal, reject on any error.\r\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\r\n\t *\r\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\r\n\t *\r\n\t * The promise should fulfill the id of the dataset that was removed.\r\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\r\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\r\n\t *\r\n\t * This will delete both disk and memory caches for the dataset for the id meaning\r\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\r\n\t */\r\n\tpublic async removeDataset(id: string): Promise<string> {\r\n\t\tconst validIdRegex = /^[^_]+$/;\r\n\r\n\t\t// if regex does not match, reject\r\n\t\tif (!id.match(validIdRegex) || id.trim() === \"\") {\r\n\t\t\treturn Promise.reject(new InsightError(\"Invalid ID!\"));\r\n\t\t}\r\n\t\tif (this.datasetIds.includes(id)) {\r\n\t\t\tlet path = `./data/${id}/`;\r\n\t\t\ttry {\r\n\t\t\t\tawait fs.rmdir(path, {recursive: true});\r\n\t\t\t} catch {\r\n\t\t\t\treturn Promise.reject(new InsightError(\"Failed to remove directory!\"));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn Promise.reject(new NotFoundError(\"Could not find that ID!\"));\r\n\t\t}\r\n\t\t// code taken from https://stackoverflow.com/questions/15292278/how-do-i-remove-an-array-item-in-typescript\r\n\t\tthis.datasets.forEach( (dataset, index) => {\r\n\t\t\tif (dataset.id === id) {\r\n\t\t\t\tthis.datasets.splice(index, 1);\r\n\t\t\t\tthis.datasetIds.splice(index, 1);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn Promise.resolve(id);\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3f337413c2b85f41cf241e46285f32c1cfe2ba28","contentHash":"db8c6fcf6cb1136e063c1d62afc74be62a2dbd06a9ce742dfaae11e5ff92682a"}}